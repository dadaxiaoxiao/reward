// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dadaxiaoxiao/go-pkg/customserver"
	"github.com/dadaxiaoxiao/reward/internal/events"
	"github.com/dadaxiaoxiao/reward/internal/grpc"
	"github.com/dadaxiaoxiao/reward/internal/repository"
	"github.com/dadaxiaoxiao/reward/internal/repository/cache"
	"github.com/dadaxiaoxiao/reward/internal/repository/dao"
	"github.com/dadaxiaoxiao/reward/internal/service"
	"github.com/dadaxiaoxiao/reward/ioc"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() *customserver.App {
	client := ioc.InitEtcdClient()
	cmdable := ioc.InitRedis()
	wechatPaymentServiceClient := ioc.InitPaymentGRPCClient(client, cmdable)
	accountServiceClient := ioc.InitAccountGRPCClient(client, cmdable)
	db := ioc.InitDB()
	rewardDao := dao.NewRewardGORMDAO(db)
	rewardCache := cache.NewRewardCache(cmdable)
	rewardRepository := repository.NewRewardRepository(rewardDao, rewardCache)
	logger := ioc.InitLogger()
	rewardService := service.NewWechatNativeRewardService(wechatPaymentServiceClient, accountServiceClient, rewardRepository, logger)
	rewardServiceServer := grpc.NewRewardServiceServer(rewardService)
	server := ioc.InitGRPCServer(client, rewardServiceServer, cmdable, logger)
	saramaClient := ioc.InitKafka()
	paymentEventConsumer := events.NewPaymentEventConsumer(saramaClient, logger, rewardService)
	v := ioc.NewConsumers(paymentEventConsumer)
	app := &customserver.App{
		GRPCServer: server,
		Consumers:  v,
	}
	return app
}

// wire.go:

var thirdPartyProvider = wire.NewSet(ioc.InitEtcdClient, ioc.InitRedis, ioc.InitDB, ioc.InitLogger, ioc.InitPaymentGRPCClient, ioc.InitAccountGRPCClient, ioc.InitKafka, ioc.NewConsumers)
